name: Build and Release

on:
  push:
    branches:
      - master
      - actions-test
  workflow_dispatch:

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          java-version: '22'
          distribution: 'adopt'
          cache: 'gradle'

      - name: Make gradlew executable
        run: chmod +x ./gradlew

      - name: Build Project
        run: ./gradlew clean shadowJar
        env:
          PACKAGE_PAT: ${{ secrets.PACKAGE_PAT }}

      - name: Get Gradle Version
        id: get_version
        run: |
          VERSION=$(./gradlew -q printVersion)
          echo "Gradle version is: $VERSION"
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Set Release Variables
        id: set_release
        shell: bash
        run: |
          if [ "$GITHUB_EVENT_NAME" = "push" ]; then
            echo "Detected push event – creating pre-release."
            # Use the Gradle version and append the run number for uniqueness.
            RELEASE_TAG="v${{ steps.get_version.outputs.version }}-${GITHUB_RUN_NUMBER}"
            PRERELEASE="true"
          else
            echo "Detected manual trigger – creating official release."
            RELEASE_TAG="v${{ steps.get_version.outputs.version }}"
            PRERELEASE="false"
          fi
          echo "RELEASE_TAG=$RELEASE_TAG" >> $GITHUB_OUTPUT
          echo "PRERELEASE=$PRERELEASE" >> $GITHUB_OUTPUT
          echo "Release tag will be: $RELEASE_TAG and prerelease is: $PRERELEASE"

      - name: Upload Release Asset
        uses: softprops/action-gh-release@v2
        with:
          prerelease: ${{ steps.set_release.outputs.PRERELEASE }}
          tag_name: ${{ steps.set_release.outputs.RELEASE_TAG }}
          generate_release_notes: true
          files: build/libs/QilletniToolchain.jar
