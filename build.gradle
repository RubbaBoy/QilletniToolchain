plugins {
    id 'idea'
    id 'java'
    id 'application'
    id 'com.github.johnrengelman.shadow' version '8.1.1'
}

group = 'is.yarr.qilletni.toolchain'
version = '1.0.0-SNAPSHOT'

sourceCompatibility = JavaVersion.VERSION_22
targetCompatibility = JavaVersion.VERSION_22

application {
    mainClass = 'is.yarr.qilletni.toolchain.QilletniToolchainApplication'
}

repositories {
    mavenCentral()
    mavenLocal()
}

dependencies {
    implementation 'info.picocli:picocli:4.7.5'
    annotationProcessor 'info.picocli:picocli-codegen:4.7.5'
    
    implementation 'is.yarr.qilletni:Qilletni:1.0.0-SNAPSHOT'
    implementation 'is.yarr.qilletni:Qilletni:1.0.0-SNAPSHOT:sources'
    
    implementation 'is.yarr.qilletni.api:qilletni-api:1.0.0-SNAPSHOT'
    implementation 'is.yarr.qilletni.docgen:QilletniDocgen:1.0.0-SNAPSHOT'

    // Configs
    implementation 'org.yaml:snakeyaml:2.2'
    implementation 'com.google.code.gson:gson:2.10.1'

    // SLF4J API dependency
    implementation 'org.apache.logging.log4j:log4j-api:2.22.1'
    implementation 'org.apache.logging.log4j:log4j-core:2.22.1'
    implementation 'org.apache.logging.log4j:log4j-slf4j-impl:2.22.1'
}

tasks.named('test') {
    useJUnitPlatform()
}

compileJava {
    options.compilerArgs += ["-Aproject=${project.group}/${project.name}"]
}

tasks.named('run', JavaExec) {
    standardInput = System.in
}

idea {
    module {
        downloadJavadoc = true // defaults to false
        downloadSources = true
    }
}

shadowJar {
    // Merge service files if needed
    mergeServiceFiles()

    // Force the multi-release attribute into the manifest
    manifest {
        attributes(
                'Multi-Release': 'true'
        )
    }

    // Keep the classifier empty if you want the final artifact to not have '-all'
    archiveClassifier.set('')
}
